$(elemento).acao -> executar uma ação no elemento
$.acao -> chamando uma função específica do jquery

$('elemento')
jQuery('elemento')

var atalho= jQuery.noConflict();
atalho('elemento'); evitando conflitos com outras bibliotecas

$('elemento').text(); troco somente texto
$('elemento').html('<h1>Posso passa elementos</h1>');

$('button') - seleciona todas tags que possuem essa tag
$('.class') - todos elemntos que tem essa class

$('li.class') - selecionando o li que tem a class X

$('#lista2 li.class')

Verificando se possui a tag na pagina, console: 
if($('button').length > 0){

}

Mudando atributos: 
$('a').attr('href', 'google.com.br')
$('img').attr('width', 200);

Lendo atributos: 
$('img').attr('width');
$('img').attr('src');

$('elemento').html('Troocando texto');
$('elemento').text('Troocando texto'); -> troca somente texto
$('elemento').html('<h1>Troocando texto</h1>');

$('#elemento').find('button'); pegando elemento que esta dentro do elemento

.addClass('class') -> adicionando class

$('elemento').val(); -> get value input
$('elemento').attr('value', 'New elemento');
$('elemento').text(); -> pegando de tags que possuem value dentro

$('elemento').after('<div>Texto</div>'); -> add apos o elemento
$('elemento').before('<div>Texto</div>'); -> antes

$('ul').append('<li>Item da lista add</li>')
prepend -> add antes

$('elemento').remove();

var elemento= document.getElementById('div');
 $(elemento).html(); -> transformando elemento html em jQuery

 $('li:eq(1)') -> pegando o segundo item da lista
$('li').eq(1); mesma coisa

$('elemento').parent(); -> pegando elemento pai
$('elemento').parent().parent(); avo

$('elementoPai').find('elementoFilho');

$('e').closest('.topo'); em situações que não sei quantas div tenho até pegar essa class. Só consegue achar se o elemento foi elementoFilho
$('e').closest('.elementoQueEnglobaOForaDaHierarquia'); pegando elemntos que estão fora da hierarquia

.find -> busca somente dentro do elemento
dar preferencia p closest a inves do parent, pois ele vai no elemento direto

.closest -> busca pra cima, os pais

Estilizando com css: 

$('h1').addClass('nomeClass');
$('h1').removeClass('nomeClass');
$('h1').hasClass('nomeClass'); boolean
$('h1').css('color', 'red');
Posso encadear as chamadas .css

$('li > ul'); pegando filhos
$('#item1 ~ li') pegando irmãos do elemento. O + pega o irmao mais proximo

Seletores: 
$('tbody tr:first')- primeira tr
$('tbody tr:not (tbody tr:first')- aplicando em todas, exceto na primeira
$('tbody tr:evem')- pares
$('tbody tr:odd')- impares
$('tbody tr:eq(3)')- aplique nesse indice
$('tbody tr:lt(2)')- aplica nos menores que 2

Seletores de conteúdo: 
$('td:contains(EsseTexto)')- buscando as td que contain esse texto
$('td:empty')- celulas vazias
$('td:not(td:empty)')- celulas que nao estão vazias
$('td:has(strong)')- celulas que tem uma tag

$('a[name=menu]'); link que tem o atributo name com value Menu
$('a[href*=min]');- elemento que contem o value min no href

Seletores de form

$(':button');
$(':button').next() | .parent() .previus(); recuperando elementos proximos
:input -> seletor generico de input
:text
:button
:password
:radio
:checkbox
select
textarea
:submit
:reset
:file
:enabled -> seleciona todos elementos que estão habilitados
:checked
:selected -> os que estão selecionados


Manipulando atributos

attr();
removeAttr();
addClass();
hasClass();
removeClass();
toggleClass();

$('img').attr({
    src: "caminho",
    title:""
});

Manipulando de conteudos: 

html(); -> posso passar uma Tag
text();
val();
replaceWith(); -> troca um elemento por outro
$('div').replaceWith(<p>TEste</p>);

Podemos usar do encademento de metodos no jQuery

Manipulando o DOM, criando elemento

var img= $('<img/>', {
    src: 'caminhoIMG',
    title:'Imagem'
    click: function({
        alert('clicou na img')
    });
});
$('body').append(img);


Manipulando o DOM, inserindo à arvore

append(); dentro na ultima posição
prepend(); dentro na primeira posição
after(); fora e apos o elemento
before(); fora e antes do inicio do elemento
wrap(); envolve com outro elemento
clone(); faz uma cópia do elemento

$('ul').append('<li>Dentro da UL na ultima posição</li>');
$('ul').before('<h1>Fora e antes do inicio da ul</h1>');
$('ul').wrap('<div>Envolvendo a ul em uma div</div>');
$('ul').append($('li').clone()); add à ul todas as li que encontrar


Manipulação do DOM: remoção
remove();  remove elementos alvos
empty();    limpa elementos internos
unwrap(); remove o elemento envolvente, exclui o container



Manipulação de CSS
css(); atribui e recupera valores
hasClass();
removeClass();
addClass();

Posicionamento
offset();
position();

Dimensões
width();
height();

$('img').width(); largura da img
$('img').innerWidth(); largura img + padding
$('img').outerWidth(); largura + padding + borders (true) -> retorna as margins pós bordas

$('img').position().top(); altura do elemento em relação à janela
$('img').position().left();
$('img').offset().top();    altura e largura das margins de impressão
$('img').offset().left();


Eventos de mouse
click(); 
dblclick(); clique duplo
mousedown(); segurando o button do mouse
mouseenter(); ao entrar no elemento
mouseleave(); ao sair do elemento
mousemove(); movimentando o cursor do mouse, posso extrair a position do cursor
mouseout(); quando saio do elemento
mouseover(); ao passar mouse por cima do elemento
mouseup(); soltando o button do mouse


Eventos de Teclado e de Formulários

$(':text').keyup(function({
    $('#msg').text($(this).val());
}));

keypress -> o evento ocorre quando a tecla está pressionada.
keydown ->  o evento ocorre quando a tecla é pressionada.
keyup -> quando solta tecla
A diferença entre keydown() e keypress() está que o segundo não é capturado quando as teclas Ctrl, Alt ou Shift são pressionadas.

Form

$(':text').focus(function({
    $('#msg').text($(this).css('background', 'green'));
}));

blur -> cursor saindo do elemento
submit -> ao submeter o form
change -> quando um valor é selecionado no select

//validação de form
$('form').submit(function(){ 
     if($(':text').val() == 'XTI'){
         return true;
     }
     return false;
});

Saber se o select foi alterado:
$('select').change(function(){
    var escolha= $('option:selected').text();
});

quando houve uma seleção dos valores do input
$('textarea').select(function(){
    alert();
});


Eventos Avançados
bind();
unbind(); -> desassociando evento do elemento
trigger(); -> um input já tem o evento de focus, com essa função consigo fazer esse evento ocorrer sem que interaja com o input em questão

$(':text').bind("keyup", function({
    $('#msg').text($(this).val());
}));

$(':text').bind("keyup blur focus", function);
$(':text').keyup(function).focus(otherFunction);

$(':button').bind('click', function({
    $(':text').unbind('keyup', function);
}));
$(':text').trigger('focus'); 

Novos elementos criados depois de já ter declarado o bind, página já foi carregada , não pegam o evento.
Assim uso a function delegate(); que faz com que os elementos recebam os Eventos
$('table').delegate(':text', 'keyup', function); -> dentro da table, todos os campos que forem construídos depois do carregamento
da pagina, receberam esse evento

undelegate(); - remove Eventos

Disparando um event:
$(':button').bind('click', function(e, src, width){
    $('#box').append($('<img/>').attr('src', src).css('width', width));
});
$(':button').trigger('click', ['caminho/imagem', '90px']);

Efeitos básicos

hide();
show();
toggle(); -> alterar estados

hide('show');
hide('normal');
hide('fast');
hide(1000); ms

Efeitos Slide Corrediços e Fade(Opacidade)
fadeIn(); deixa opaco, volta com elemento
fadeOut(); deixa transparente, some elemento
fadeTo(); atinge certa opacidade fadeTo(1000, 0.3); chega a 30% de opacidade
fadeToggle(); ora aparece, ora some

slideUp(); fecha p cima
slideDown(); abre p baixo
slideToggle(); 
Todas essas functions aceitam os param declarados acima

$('tbody tr:odd').assClass('impar');
$('tbody tr:nth-child(2n+1)').assClass('impar');- podemos passar equação

Destacar Linhas de uma Tabela

$('tbody tr').hover(function(){ quando passa o mouse por cima da tr
    $(this).addClass('destaque')//color
}, function(){
    $(this).removeClass('destaque')
}); 


Destacar Colunas de uma Tabela

$('table thead tr th').each(function(index){
	$(this).bind('click', function(){alert(index)});
});

$('table thead tr th').not('tr:first-child').prepend('<span>+</span>').css('cursor','pointer');
$('table thead tr th').each(function(index){
    var n= index - 1;
	$(this).click(function(){
        $('td').removeClass('destaque'); -> removendo marcação de todas TDs
        $(this).parents('thead').siblings('tbody').children('tr').each(function(){
            $(this).children('td:eq('+n+')').addClass('destaque'); //filhos que sejam td e que estejam na posiçao N
        });
    });
});

ToolTips Destacar Células de uma Tabela

$('td').hover(function(){
    $(this).addClass('destaque').prepend('<div class='tooltip'>Testando</div>');
}, function(){
    $(this).removeClass('destaque');
    $('.tooltip').remove();  //pego todos elementos com essa classe e removo
});

.tooltip{
    width: 180px;
    padding: 2px 4px;
    margin-top: 25px;
    border: 1px solid #000;
    color: #000;
    background: #DDD;
    position: absolute;
}

Mostrando nome da coluna e valor da Célula
$(table thead tr th).each(function(index){
    var n = index + 1;
    var nomeColuna= $(this).text();

    $('tr td:nth-child('+ n +')').hover(function(){ //pegando as td que estejam na posição do titulo
        var nomeCelula= $(this).text();
          $(this).addClass('destaque').prepend('<div class='tooltip'>nomeColuna + nomeCelula</div>');
          // selecionando td que contem valores iguais
          $(this).click(function(){
            $('tbody tr').removeClass('destaque');
            $('.tooltip').remove();
            $('tbody tr:contains('+ nomeCelula +')').addClass('destaque');
          });
    }, function(){
    $(this).removeClass('destaque');
    $('.tooltip').remove();  //pego todos elementos com essa classe e removo);

});


Mostrar e Ocultar Linhas de Tabela
attr colspan= 5 -> fala a quantidade de colunas que a tr ocupará


$('tbody tr:not(.sub)').hide(); //suma as tr que não tem a class sub
$('.sub th').prepend('<img src="img/add.png" class="img">');
$('img').bind('click', function(){
    var valueSrcImg= $(this).attr('src');
    if(valueSrcImg === 'img/remove.png'){
        $(this).attr('src', 'img/add.png').parents().nextUntil("tr.sub").hide(); 
    }else{
        $(this).attr('src', 'img/remove.png').parents().nextUntil("tr.sub").show()
    }
});


Hint Dica de Preenchimento
$(':input + span').css({
    border: '1px solid #000',
    padding: '2px',
    background: '#DCDCDC',
    marginLeft: '4px',
    display: 'none'
});

$(':input').bind('focus', function(){
    $(this).next().fadeIn(1500);
}).bind('blur', function(){
    $(this).next().fadeOut(1000);
});

Selecionar Deselecionar todos os Checkboxes

$('.toggle').change(function(){
    if(this.checked){
        $(':checkbox').attr('checked', 'checked');
    }else{
        $(':checkbox').removeAttr('checked');
    }    
});

Contagem de Caracteres Restantes
$('textarea').bind('input keyup paste', function(){
    var maxCaracteres= 20;
    var qtdeDisponivel= maxCaracteres - $(this).val().length;
    if(qtdeDisponivel < 0){
        var texto= $(this).val().substr(0, maxCaracteres);
        $(this).val(texto);
        qtdeDisponivel= 0;
    }
    $('.count').text(qtdeDisponivel);  
    
});

Restringir Entrada de Caracteres Específicos

$('#campo').bind('keydown', function(event){
    var keyCode= event.which;
    var isNumber= (keyCode > 47 && keyCode < 58);
    var isOther= (",8,46,37,38,39,40,".indexOf("," + keyCode + ",") > -1 ); //keyCode de backspace, setas
    if(isNumber || isOther){      //teclas numericas compreendidas entre 47 e 58
        return true;
    }
    return false;
});

Instalação jQueryUI
1- Escolha do theme e download do mousemove
2- Pegar files css e js

Accordion(Seçao 1, Seção 2, cada uma com seu conteúdo) 

$('#accordion').accordion({ Aplico ao container
    collapsible: true //permite abrir e  fechar o elemento
});


Auto Complete, buttons, Drag and Drop Arrastar e Soltar, Dialog, progressbar, Elementos Redimensionáveis, tabs abas, slider,  Elementos Selecionáveis
script-ui-my.js contem os exemplos

Plugins jQuery (mask, validação de form, colorPicker, tree view, carousel, ZipCode Finder Localizador de Endereços)
Repositórios: 
(plugins.jquery.com) / code.google.com / github.com / sourceforge.net

Ajax com jQuery JsonP e Requisição de Domínio Cruzado
Request no mesmo dominio:
$('#button').click(function(){
    $.ajax({
        type: 'GET',
        url: 'ajax/file.js', //caminho relativo
        dataType: 'js',      //html, json, jsonP, text. xml
        success: function(result){
            alert(result);
        }
    });
});

Conteúdo de outros domínios: 
$.getJSON('url',
           {
               tags: 'capoeira',
               tagmode: 'any',
               format: 'json'
           },
           function(data){
            $.each(data.items, function(i, item){
                $('#resp').append($('<img/>').attr('src', item.media.m));
                if(i === 3) return false;
            })
           }
);

Guardando dados em um elemento

HTML5 nos permite salvar attr e valores em elementos.
    Ex: $('input').attr('idade', 90); -> fica no html

Salvando dados na memoria do jQuery: 
    $('input').data('idade', 90); salva na memoria do pc, nao fica no HTML
    $('input').data('idade');
Shift + Alt + A  - comentar

Métodos úteis do dia a dia

$.trim(elemento); - remove os espaços em branco antes e depois do texto
$('li').each(function(){         //Percorrendo as li
    console.log($(this).text());
});
$.type(elemento);       //Verificando tipo da variavel
$.isNumeric(elemenro);  //return boolean
$.isArray();

js puro -> typeof elemento;  //retorna 'string', 'number'

Como saber se um elemento existe na tela? 
1- posso pegar via class ou id e chamar o (.length > 0), não basta apenas pegar o elemento via ID ou class, a seleção via jQuery retorna um array vazio [] ou com os elementos achados 
    if([]){
        alert('Entra');
    }

Como saber se um elemento tem uma class em particular?
$('elemento').hasClass('class'); boolean

Como ativar/desativar um elemento de form? 
$('elemento').attr('disabled', 'disabled');
$('elemento').removeAttr('disabled');
$('elemento').removeAttr('checked');

Como pegar o Item selecionado de um select? 
$('elemento').find('option').eq(1).attr('selected', selected); --selecionando item no dropdown
$('elemento').val();

 Como alterar o 3º elemento de uma lista de 10 itens?
 $('li').eq(2).text('Teste');   --get item da posição 3

 Como pegar um elemento nativo com jQuery? o jQuery nos permite na seleção o retorno array, via js puro retorna somente um elemento
 Transformando objeto jquery p js vanilla:  
    $('li')[0].innerHTML('text'); //retorna sem os []

Definindo Eventos em Elementos DOM?
$('elemento').click(function(){
    $(this).toggleClass('class');   --se nao tiver coloque, se tiver remova
});

mouseover - quando passar o mouse no elemento
mouseout - quando sair do elemento

Eventos Auxiliadores
$('elemento').hover(function(){ --faz o mesmo papel do mouseover e mouseout
    addClass
}, function(){
    removeClass
});

$('elemento').hover(function(){ --faz o mesmo papel do mouseover e mouseout
    toggleClass //mesma funçao dos acima
});

Formas de colocar eventos: 
$('elemento').click();
$('elemento').bind('click');
$('elemento').on('click');

Removendo Eventos de um Elemento DOM

$('elemento').unbind('click');
$('elemento').off('click');

Acionamento Falso de Eventos
$('elemento').trigger('click');

Propriedades padrão de um Evento
$('buttonTypeSumit').click(function(e){
    e.preventDefault(); //nao será submetido
    e.target or this;   //mostra o elemento que fez disparar o event
    e.type;             //tipo do event
    alert('');
});

Eventos de Browser
$(window).bind('resize', function(){
    alert('scroll');
});
$('elemento').bind('scroll', function(){});

Eventos de Formulário
$('form').bind('submit', function(){

});
$('elemento').bind('select', function(){}); //seleciona texto dentro do input
- focus ganho foco
- blur perco foco
- change quando mudar no dropdown

Aplicar o mesmo evento em 2 elementos
$('#elemento, #elemento2');

Eventos de Teclado
keydown - tecla pressionada
keyup - solta tecla

e.keyCode - number da tecla pressionada

Eventos de Mouse (podem ser aplicados a qualquer elemento)

mousedown - aperta o mouse no elemento, pressiona
mouseup - quando solta o click
click - executa os 2 events acima
mousemove - quando mover o mouse sobre o elemento
mouseover - quando entro com o mouse na area do event, executa somente uma vez
mouseout - quando sai do elemento
dblclick - 2 clicks, depende da velocidade do click

Seção 4 Efeitos
32 
.hide('show'); - desaparecerá de forma devagar
.show('show'); - aparece de forma progressiva
.show('fast'); - aparece mais rápido
.toggle('show');
.fadeIn(); - ao contrario, muda a opacidade do elemento (vai até 1)
.fadeOut(); - aos poucos vai aumentando a opacidade até que fique invisível  (vai até 0)
.fadeTo('slow' ,0.5); - especifico até qual opacidade chegará
.fadeToggle(); - junção do In com out

Efeito slide 
.slideUp(); -desaparece p cima
.slideDown(); desce até aparecer
.slideToggle(); -alterna entre os dois 
.slideUp('show');
Efeitos muito usados com hellowbar que  são aquelas barras de promoções que ficam no topo dos sites e-commerce.

Animate
.animate({
    'margin-left': 100px,
    'margin-top': 10,
    'background': #cecece
}, 1000); duration

.animate({
    'margin-left': 100px,
    'margin-top': 10,
    'background': #cecece
}, {
    duration: 1500,
    complete: function(){alert('animação finalizou!')},
    start: function(){alert('Começou')},
    step: function(){alert('é chamada a cada px alterado')}
}); 

Como animar uma animação no meio de um processo? 
.stop(); - para a animação

Como somar / subtrair propriedades na animação? Sempre que clicar, pegará a posição atual e somará mais 50
.animate({
    'margin-left': '+=50' 
}, 1000); duration

Ajax (requisições assincronas, não possuem sincronismo, são request aleatórias)
Formas de enviar form: 
GET - as info aparecem junto a url
POST - envia por debaixo dos panos

XHR no console do chrome filtro somente request ajax
Métodos auxiliares
.load('file.html'); - insere o conteúdo do file.html no elemento
$.get('file.html', function(data){
    $('div').html(data);
});
$.post('file.html', function(data){
    $('div').html(data);
});

Submite no form:
$('#form').bind('submit', function(e){
    e.preventDefault(); //p ser enviado via ajax
    var valoresFormatados = $(this).serialize();
});






































