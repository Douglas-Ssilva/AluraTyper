$(elemento).acao -> executar uma ação no elemento
$.acao -> chamando uma função específica do jquery

$('elemento')
jQuery('elemento')

var atalho= jQuery.noConflict();
atalho('elemento'); evitando conflitos com outras bibliotecas

$('elemento').text(); troco somente texto
$('elemento').html('<h1>Posso passa elementos</h1>');

$('button') - seleciona todas tags que possuem essa tag
$('.class') - todos elemntos que tem essa class

$('li.class') - selecionando o li que tem a class X

$('#lista2 li.class')

Verificando se possui a tag na pagina, console: 
if($('button').length > 0){

}

Mudando atributos: 
$('a').attr('href', 'google.com.br')
$('img').attr('width', 200);

Lendo atributos: 
$('img').attr('width');
$('img').attr('src');

$('elemento').html('Troocando texto');
$('elemento').text('Troocando texto'); -> troca somente texto
$('elemento').html('<h1>Troocando texto</h1>');

$('#elemento').find('button'); pegando elemento que esta dentro do elemento

.addClass('class') -> adicionando class

$('elemento').val(); -> get value input
$('elemento').attr('value', 'New elemento');
$('elemento').text(); -> pegando de tags que possuem value dentro

$('elemento').after('<div>Texto</div>'); -> add apos o elemento
$('elemento').before('<div>Texto</div>'); -> antes

$('ul').append('<li>Item da lista add</li>')
prepend -> add antes

$('elemento').remove();

var elemento= document.getElementById('div');
 $(elemento).html(); -> transformando elemento html em jQuery

 $('li:eq(1)') -> pegando o segundo item da lista
$('li').eq(1); mesma coisa

$('elemento').parent(); -> pegando elemento pai
$('elemento').parent().parent(); avo

$('elementoPai').find('elementoFilho');

$('e').closest('.topo'); em situações que não sei quantas div tenho até pegar essa class. Só consegue achar se o elemento foi elementoFilho
$('e').closest('.elementoQueEnglobaOForaDaHierarquia'); pegando elemntos que estão fora da hierarquia

.find -> busca somente dentro do elemento
dar preferencia p closest a inves do parent, pois ele vai no elemento direto

.closest -> busca pra cima, os pais

Estilizando com css: 

$('h1').addClass('nomeClass');
$('h1').removeClass('nomeClass');
$('h1').hasClass('nomeClass'); boolean
$('h1').css('color', 'red');
Posso encadear as chamadas .css

$('li > ul'); pegando filhos
$('#item1 ~ li') pegando irmãos do elemento. O + pega o irmao mais proximo

Seletores: 
$('tbody tr:first')- primeira tr
$('tbody tr:not (tbody tr:first')- aplicando em todas, exceto na primeira
$('tbody tr:evem')- pares
$('tbody tr:odd')- impares
$('tbody tr:eq(3)')- aplique nesse indice
$('tbody tr:lt(2)')- aplica nos menores que 2

Seletores de conteúdo: 
$('td:contains(EsseTexto)')- buscando as td que contain esse texto
$('td:empty')- celulas vazias
$('td:not(td:empty)')- celulas que nao estão vazias
$('td:has(strong)')- celulas que tem uma tag

$('a[name=menu]'); link que tem o atributo name com value Menu
$('a[href*=min]');- elemento que contem o value min no href

Seletores de form

$(':button');
$(':button').next() | .parent() .previus(); recuperando elementos proximos
:input -> seletor generico de input
:text
:button
:password
:radio
:checkbox
select
textarea
:submit
:reset
:file
:enabled -> seleciona todos elementos que estão habilitados
:checked
:selected -> os que estão selecionados


Manipulando atributos

attr();
removeAttr();
addClass();
hasClass();
removeClass();
toggleClass();

$('img').attr({
    src: "caminho",
    title:""
});

Manipulando de conteudos: 

html(); -> posso passar uma Tag
text();
val();
replaceWith(); -> troca um elemento por outro
$('div').replaceWith(<p>TEste</p>);

Podemos usar do encademento de metodos no jQuery

Manipulando o DOM, criando elemento

var img= $('<img/>', {
    src: 'caminhoIMG',
    title:'Imagem'
    click: function({
        alert('clicou na img')
    });
});
$('body').append(img);


Manipulando o DOM, inserindo à arvore

append(); dentro na ultima posição
prepend(); dentro na primeira posição
after(); fora e apos o elemento
before(); fora e antes do inicio do elemento
wrap(); envolve com outro elemento
clone(); faz uma cópia do elemento

$('ul').append('<li>Dentro da UL na ultima posição</li>');
$('ul').before('<h1>Fora e antes do inicio da ul</h1>');
$('ul').wrap('<div>Envolvendo a ul em uma div</div>');
$('ul').append($('li').clone()); add à ul todas as li que encontrar


Manipulação do DOM: remoção
remove();  remove elementos alvos
empty();    limpa elementos internos
unwrap(); remove o elemento envolvente, exclui o container



Manipulação de CSS
css(); atribui e recupera valores
hasClass();
removeClass();
addClass();

Posicionamento
offset();
position();

Dimensões
width();
height();

$('img').width(); largura da img
$('img').innerWidth(); largura img + padding
$('img').outerWidth(); largura + padding + borders (true) -> retorna as margins pós bordas

$('img').position().top(); altura do elemento em relação à janela
$('img').position().left();
$('img').offset().top();    altura e largura das margins de impressão
$('img').offset().left();


Eventos de mouse
click(); 
dblclick(); clique duplo
mousedown(); segurando o button do mouse
mouseenter(); ao entrar no elemento
mouseleave(); ao sair do elemento
mousemove(); movimentando o cursor do mouse, posso extrair a position do cursor
mouseout(); quando saio do elemento
mouseover(); ao passar mouse por cima do elemento
mouseup(); soltando o button do mouse


Eventos de Teclado e de Formulários

$(':text').keyup(function({
    $('#msg').text($(this).val());
}));

keypress -> o evento ocorre quando a tecla está pressionada.
keydown ->  o evento ocorre quando a tecla é pressionada.
keyup -> quando solta tecla
A diferença entre keydown() e keypress() está que o segundo não é capturado quando as teclas Ctrl, Alt ou Shift são pressionadas.

Form

$(':text').focus(function({
    $('#msg').text($(this).css('background', 'green'));
}));

blur -> cursor saindo do elemento
submit -> ao submeter o form
change -> quando um valor é selecionado no select

//validação de form
$('form').submit(function(){ 
     if($(':text').val() == 'XTI'){
         return true;
     }
     return false;
});

Saber se o select foi alterado:
$('select').change(function(){
    var escolha= $('option:selected').text();
});

quando houve uma seleção dos valores do input
$('textarea').select(function(){
    alert();
});


Eventos Avançados
bind();
unbind(); -> desassociando evento do elemento
trigger(); -> um input já tem o evento de focus, com essa função consigo fazer esse evento ocorrer sem que interaja com o input em questão

$(':text').bind("keyup", function({
    $('#msg').text($(this).val());
}));

$(':text').bind("keyup blur focus", function);
$(':text').keyup(function).focus(otherFunction);

$(':button').bind('click', function({
    $(':text').unbind('keyup', function);
}));
$(':text').trigger('focus'); 

Novos elementos criados depois de já ter declarado o bind, página já foi carregada , não pegam o evento.
Assim uso a function delegate(); que faz com que os elementos recebam os Eventos
$('table').delegate(':text', 'keyup', function); -> dentro da table, todos os campos que forem construídos depois do carregamento
da pagina, receberam esse evento

undelegate(); - remove Eventos

Disparando um event:
$(':button').bind('click', function(e, src, width){
    $('#box').append($('<img/>').attr('src', src).css('width', width));
});
$(':button').trigger('click', ['caminho/imagem', '90px']);

Efeitos básicos

hide();
show();
toggle(); -> alterar estados

hide('show');
hide('normal');
hide('fast');
hide(1000); ms

Efeitos Slide Corrediços e Fade(Opacidade)
fadeIn(); deixa opaco, volta com elemento
fadeOut(); deixa transparente, some elemento
fadeTo(); atinge certa opacidade fadeTo(1000, 0.3); chega a 30% de opacidade
fadeToggle(); ora aparece, ora some

slideUp(); fecha p cima
slideDown(); abre p baixo
slideToggle(); 
Todas essas functions aceitam os param declarados acima

$('tbody tr:odd').assClass('impar');
$('tbody tr:nth-child(2n+1)').assClass('impar');- podemos passar equação

Destacar Linhas de uma Tabela

$('tbody tr').hover(function(){ quando passa o mouse por cima da tr
    $(this).addClass('destaque')//color
}, function(){
    $(this).removeClass('destaque')
}); 


Destacar Colunas de uma Tabela




Aula 13 udemy




